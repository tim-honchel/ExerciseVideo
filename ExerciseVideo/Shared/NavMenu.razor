<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Workout Builder</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>

        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3">
                   <NavLink class="nav-link" href="profile">
                       <span class="oi oi-person"></span> @(!string.IsNullOrEmpty(userName) ? userName : "Profile")
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="logout">
                       <span class="oi oi-account-logout"></span> Logout
                    </NavLink>
                </div
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="createworkout">
                        <span class="oi oi-plus" aria-hidden="true"></span> Create a Workout
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="workout">
                        <span class="oi oi-arrow-circle-right" aria-hidden="true"></span> Workout 1
                    </NavLink>
                </div>  
            </Authorized>
            <NotAuthorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="login?redirectUri=/">
                       <span class="oi oi-account-login"></span> Login / Sign Up
                    </NavLink>
                </div>
            </NotAuthorized>
        </AuthorizeView>

    </nav>
</div>

@code {


    [CascadingParameter]
    private Task<AuthenticationState>? authenticationState { get; set; }
    public string userName = "Hello";
    private bool collapseNavMenu = true;
    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    protected override async Task OnInitializedAsync()
    {
        if (authenticationState is not null)
        {
            var state = await authenticationState;

            userName = state?.User?.Identity?.Name ?? string.Empty;
        }

        await base.OnInitializedAsync();
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
