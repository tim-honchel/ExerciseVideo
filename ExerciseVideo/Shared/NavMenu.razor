@inject Context _context;
@inject UserService _userService;
@inject WorkoutService _workoutService;
@using ExerciseVideo.Data;
@using ExerciseVideo.Data.Entities;
@using ExerciseVideo.Data.Repositories;
@using ExerciseVideo.Services;

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Workout Builder</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>

        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3">
                   <NavLink class="nav-link" href="profile">
                       <span class="oi oi-person"></span> @(!string.IsNullOrEmpty(userName) ? userName : "Profile")
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="logout">
                       <span class="oi oi-account-logout"></span> Logout
                    </NavLink>
                </div
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="createworkout">
                        <span class="oi oi-plus" aria-hidden="true"></span> Create a Workout
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="workout?id=-1">
                        <span class="oi oi-arrow-circle-right" aria-hidden="true"></span> Sample Workout
                    </NavLink>
                </div>
                @foreach (var workout in workouts)
                {
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="@($"workout?id={workout.Id}")">
                            <span class="oi oi-arrow-circle-right" aria-hidden="true"></span>
                            @workout.Title &numsp;
                            <a class="oi oi-pencil" href="@($"editworkout?id={workout.Id}")"></a>
                        </NavLink>
                    </div>
                }
            </Authorized>
            <NotAuthorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="login?redirectUri=/">
                       <span class="oi oi-account-login"></span> Login / Sign Up
                    </NavLink>
                </div>
            </NotAuthorized>
        </AuthorizeView>

    </nav>
</div>

@code {


    [CascadingParameter]
    private Task<AuthenticationState>? authenticationState { get; set; }
    private List<Workout> workouts { get; set; } = new List<Workout>();
    private string userName { get; set; } 
    private bool collapseNavMenu = true;
    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    protected override async Task OnInitializedAsync()
    {
        if (authenticationState is not null)
        {
            var state = await authenticationState;

            var user = await _userService.GetCurrentUser(state);
            userName = state.User.Identity.Name;
            workouts = _workoutService.GetWorkoutsByUserId(user.Id);
        }


        await base.OnInitializedAsync();
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
