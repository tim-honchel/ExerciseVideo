@page
@model ExerciseVideo.Pages.WorkoutModel
@using ExerciseVideo.Data

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
    <title>Workout</title>
    <link href="~/css/bootstrap/bootstrap.min.css" rel="stylesheet" />
    <link href="~/css/site.css" rel="stylesheet" asp-append-version="true" />
</head>

<body class="body">

    <p id="spanExercise" class="display-6 text-center">
        Workout Time
    </p>

    <p id="spanTimer" class="display-1 text-center">
        ...
    </p>

    <div class="d-flex justify-content-center">
        <button id="btnStart" class="btn btn-primary" onclick="start()">Start</button>
        <button id="btnPause" class="disabled" disabled="true" onclick="pause()">Pause</button>
        <button id="btnReset" class="disabled" disabled="true" onclick="reset()">Reset</button>
    </div>


    @if (Model.Exercises != null)
    {
        <table class="table table=striped">
            <thead>
                <tr>
                    <th>Exercise</th>
                    <th>Seconds</th>
                </tr>
            </thead>
            <tbody>
                @foreach (Exercise exercise in Model.Exercises)
                {
                    <tr id="@("row"+exercise.Order)">
                        <td>
                            <button id="btnExercise" class="btn btn-link" onclick="goToExercise(@exercise.Order)">@exercise.Name</button>
                        </td>
                        <td>
                            @exercise.Time
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }

    <br />

    

    <br />
    <br />


    

</body>


<script type="text/javascript"> 
    
    var exercises = new Array();
    var mode;
    var row;
    var seconds;
    var timer;

    window.onload = buildExerciseArray;

    function buildExerciseArray() {

        @if (Model.Exercises != null)
        {
            @:exercises.push({ Name: "Get Ready...", Time: 3 });
            foreach (var exercise in Model.Exercises)
            {
                @:exercises.push({ Name: "@exercise.Name", Time: "@exercise.Time" });
            }
            @:exercises.push({ Name: "Finished!", Time: 0 });
        }
        if (exercises.length == 0) {
            disableStart();
        }

    }

    var countdown = () => {
        updateDisplay();
        seconds--;
        if (seconds < 0 && row < (exercises.length - 1)) {
            row++;
            seconds = exercises[row].Time;
        }
        else if (seconds < 0) {
            mode = "finished";
            clearInterval(timer);
            enableButton("btnReset");
            disableButton("btnPause");
        }
    }
    
    var disableButton = (buttonId) => {
        document.getElementById(buttonId).disabled = true;
        document.getElementById(buttonId).className = "disabled";
    }

    var enableButton = (buttonId) => {
        document.getElementById(buttonId).disabled = false;
        document.getElementById(buttonId).className = "btn-primary";
    }

    var goToExercise = (exerciseId) => {
        row = (exerciseId + 1);
        seconds = exercises[row].Time;
        for (let i = 0; i < exerciseId; i++) {
            document.getElementById("row" + i).className = "table-secondary";
        }
        for (let i = (exerciseId + 1); i < exercises.length - 2; i++) {
            document.getElementById("row" + i).className = "";
        }
        document.getElementById("btnStart").textContent = "Resume";
        pause();
        mode = "goto";
        updateDisplay();
    }

    var pause = () => {
        mode = "pause";
        clearInterval(timer);
        enableButton("btnStart");
        enableButton("btnReset");
        disableButton("btnPause");
    }

    var reset = () => {
        mode = null;
        document.getElementById("btnStart").textContent = "Start";
        enableButton("btnStart");
        disableButton("btnPause");
        disableButton("btnReset");
        resetDisplay();
    }

    var resetDisplay = () => {
        document.getElementById("spanExercise").textContent = "Workout Time";
        document.getElementById("spanTimer").textContent = "...";
        for (let i = 0; i < exercises.length - 2; i++)
            {
                document.getElementById("row" + i).className = "";
            }
    }

    var start = () => {
       
        if (mode == null) {
            row = 0;
            seconds = exercises[row].Time;
            document.getElementById("btnStart").textContent = "Resume";
            countdown();
        }
        else if (mode == "goto") {
            countdown();
        }
        mode = "play";
        enableButton("btnPause");
        disableButton("btnReset");
        disableButton("btnStart");
        timer = setInterval(countdown, 1000);

    }

    var updateDisplay = () => {
        document.getElementById("spanExercise").textContent = exercises[row].Name;
        document.getElementById("spanTimer").textContent = seconds;
        if (row > 0 && row < exercises.length - 1)
        {
            document.getElementById("row" + (row - 1)).className = "table-primary";
        }
        if (row > 1) {
            document.getElementById("row" + (row - 2)).className = "table-secondary";
        }
    }

    </script>
